#
# \file     ifs.build
# \brief    Buildfile describing the image filesystem (IFS) used for building
#           the QNX OS test image.
#
# Copyright (C) 2025 Deniz Eren (deniz.eren@outlook.com)
#
# This program is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program. If not, see <https://www.gnu.org/licenses/>.
#

[search=/root/qnx800/target/qnx/x86_64:/root/qnx800/target/qnx/x86_64/boot/sys:/root/qnx800/target/qnx:.]

[+dupignore]
[+optional]

[uid=0 gid=0 dperms=0555 perms=0555]

[image=20m]
[virtual=x86_64,bios ] boot = {
    startup-x86
    # Setting PATH and LD_LIBRARY_PATH here allows them to be set both for
    # procnto as well as programs run from the IFS startup script.
    PATH=/opt/bin:/proc/boot:/system/xbin
    LD_LIBRARY_PATH=/opt/lib:/proc/boot:/system/lib:/system/lib/dll
    [+keeplinked uid=0 gid=0 perms=0700 ] CONFIG_PATH=/proc/boot:/system/etc procnto-smp-instr -v -mr -d 0777 -u 0777
}

[+script] startup-script = {
    # As various programs expect some binaries in fixed location, create procmgr symlinks to them.
    # We can't specify these paths for the files themselves since if we build a non-union system,
    # the actual paths would be things like /ifs/bin/sh
    procmgr_symlink /proc/boot/ksh /bin/ksh
    procmgr_symlink /proc/boot/ksh /bin/sh
    procmgr_symlink /system/xbin/cp /bin/cp
    procmgr_symlink /system/xbin/rm /bin/rm
    procmgr_symlink /data/var/tmp /tmp
    procmgr_symlink /system/xbin/ssh /usr/bin/ssh
    procmgr_symlink /proc/boot/ldqnx-64.so.2 /usr/lib/ldqnx-64.so.2
    procmgr_symlink /system/usr/lib/valgrind /usr/lib/valgrind

    # **FIXME**
    # Processes should usually use _CS_CONFIG_PATH to locate configuration files.  But for now
    # create symlinks for some locations that can't move.
    procmgr_symlink /system/etc/terminfo /usr/share/terminfo
    procmgr_symlink /system/etc/profile /data/var/etc/profile
    procmgr_symlink /system/etc/termcap /data/var/etc/termcap
    procmgr_symlink /system/usr/share/misc/magic /usr/share/misc/magic
    procmgr_symlink /data/var/etc /etc
    procmgr_symlink /data/var/opt /opt
    procmgr_symlink /data/var /var
    procmgr_symlink /system/etc/profile /etc/profile
    procmgr_symlink /data/home/root /root
    procmgr_symlink /system/xbin/login /bin/login

    TERM=qansi
    HOME=/data/home/root
    PCI_BKWD_COMPAT_MODULE=/proc/boot/pci_bkwd_compat.so
    PCI_SLOG_MODULE=pci_slog2.so
    PCI_CAP_MODULE_DIR=/proc/boot/lib/dll/pci/
    #~30.builtin
    /proc/boot/startup.sh
    #50.builtin
    setconf TIMEZONE UTC0
    mount -uo noexec /dev/shmem
    rtc hw
    #~80.builtin

    reopen /dev/con1

    # Display startup message and system information
    display_msg ""
    display_msg "-------------- dev-qnx testing vm -----------------"
    display_msg ""
    uname -a
    display_msg ""
}

startup.sh=./scripts/startup.sh
post_startup.sh=./scripts/post_startup.sh
mount_fs.sh=./scripts/mount_fs.sh

#############################################
### Toybox
#############################################
toybox=usr/bin/toybox
[type=link] cat=toybox
[type=link] chmod=toybox
[type=link] dd=toybox
[type=link] echo=toybox
[type=link] ln=toybox
[type=link] ls=toybox
[type=link] rm=toybox
[type=link] grep=toybox

#############################################
### Utilities
#############################################
bin/on
# waitfor and ability are same binary as on
[type=link] waitfor=on
[type=link] ability=on
sbin/rtc
bin/setfacl
bin/ksh
bin/pidin
# Allow sh to be found in PATH
[type=link] sh=ksh
bin/mount
usr/bin/getconf
# getconf and setconf are same binary
[type=link] setconf=getconf
sbin/devc-con
bin/slog2info

#############################################
### Services
#############################################
sbin/devb-eide
sbin/devb-ahci
bin/slogger2
sbin/fsevmgr

#############################################
### PCI
#############################################

[perms=0444] pci_server.cfg = {
[buscfg]
DO_BUS_CONFIG=no

[envars]
PCI_CAP_MODULE_DIR=/proc/boot/lib/dll/pci/
PCI_DEBUG_MODULE=pci_debug2.so
PCI_HW_MODULE=pci_hw-Intel_x86.so
}

lib/dll/pci/pci_hw-Intel_x86.so
lib/dll/pci/pci_hw-Intel_x86.so.3.0
lib/dll/pci/pci_hw-Intel_x86.so.3.0.sym
lib/dll/pci/pci_slog2.so
lib/dll/pci/pci_slog2.so.3.0
lib/dll/pci/pci_slog2.so.3.0.sym
lib/dll/pci/pci_cap-0x05.so=lib/dll/pci/pci_cap-0x05.so
lib/dll/pci/pci_cap-0x05.so.3.0=lib/dll/pci/pci_cap-0x05.so.3.0
lib/dll/pci/pci_cap-0x05.so.3.0.sym=lib/dll/pci/pci_cap-0x05.so.3.0.sym
lib/dll/pci/pci_cap-0x10.so=lib/dll/pci/pci_cap-0x10.so
lib/dll/pci/pci_cap-0x10.so.3.0=lib/dll/pci/pci_cap-0x10.so.3.0
lib/dll/pci/pci_cap-0x10.so.3.0.sym=lib/dll/pci/pci_cap-0x10.so.3.0.sym
lib/dll/pci/pci_cap-0x11.so=lib/dll/pci/pci_cap-0x11.so
lib/dll/pci/pci_cap-0x11.so.3.0=lib/dll/pci/pci_cap-0x11.so.3.0
lib/dll/pci/pci_cap-0x11.so.3.0.sym=lib/dll/pci/pci_cap-0x11.so.3.0.sym
lib/dll/pci/pci_strings.so
lib/dll/pci/pci_strings.so.3.0
lib/dll/pci/pci_strings.so.3.0.sym
lib/dll/pci/pci_bkwd_compat.so
lib/dll/pci/pci_bkwd_compat.so.3.0
lib/dll/pci/pci_bkwd_compat.so.3.0.sym
lib/dll/pci/pci_debug2.so
lib/dll/pci/pci_debug2.so.3.0
lib/dll/pci/pci_debug2.so.3.0.sym
sbin/pci-server

#############################################
### Miscellaneous
#############################################
# Capture the build information

[perms=0444] build/ifs.build=./parts/ifs.build
[perms=0444] build/system.build=./parts/system.build
[perms=0444] build/data.build=./parts/data.build

#############################################
### Customization
#############################################

[-autolink]

lib/libc.so.6
usr/lib/ldqnx-64.so.2
lib/libgcc_s.so.1
lib/libm.so.3
lib/libcam.so.2
lib/dll/io-blk.so
lib/dll/cam-disk.so
lib/dll/fs-qnx6.so
lib/dll/fs-dos.so
lib/libslog2.so.1
usr/lib/libcrypto.so.3
lib/libsocket.so.4
[type=link] libsocket.so=libsocket.so.4
usr/lib/libz.so.2
lib/libslog2shim.so.1
lib/libsecpol.so.1
lib/libpci.so.3.0
lib/libjson.so.1
lib/libslog2parse.so.1
lib/libjail.so.1
lib/libfsnotify.so.1

usr/lib/libqcrypto.so.1.0
lib/dll/qcrypto-openssl-3.so
lib/libqh.so.1
lib/libregex.so.1

[uid=0 gid=0 perms=0444] qcrypto.conf={
openssl-3 tags=*
}
# local/snippets/ifs_files.custom
# Placeholder for local list of files to add to ifs
sbin/shutdown
